global
    daemon
    maxconn 200000        # count about 1 GB per 20000 connections
    nbproc 4 # Number of processing cores. Dual Dual-core Opteron is 4 cores for example.
    tune.maxaccept -1
    tune.bufsize 16384
    tune.maxrewrite 2048
    tune.ssl.default-dh-param 2048
    log 127.0.0.1:515 local0

defaults
    maxconn 100000        # Should be slightly smaller than global.maxconn.
    timeout client 60s   # Client and server timeout must match the longest
    timeout server 30s   # time we may wait for a response from the server.
    timeout queue  60s   # Don't queue requests too long if saturated.
    timeout connect 4s   # There's no reason to change this one.

    no option abortonclose
    option      persist
    option      redispatch
	

frontend haproxy_http
    mode tcp 
    bind :80

    default_backend RANCHER_HTTP

frontend haproxy_https
    mode tcp
    bind :443

    default_backend RANCHER_GUI_HTTPS


frontend stats
        bind            :8080
        mode            http
        stats enable
        stats refresh 60s
        stats auth root:JGMbDAH3argv
        stats uri /stats


backend RANCHER_GUI_HTTPS
    balance leastconn
    option tcp-check
    tcp-check connect

    {% for host in groups['k8s_masters'] %}
    server {{host}} {{hostvars[host]['ansible_host']}}:443 weight 1 maxconn 500 check inter 2000 rise 2 fall 2
    {% endfor %}

backend RANCHER_HTTP
    balance leastconn
    option tcp-check
    tcp-check connect

    {% for host in groups['k8s_workers'] %}
    server {{host}} {{hostvars[host]['ansible_host']}}:80 weight 1 maxconn 500 check inter 2000 rise 2 fall 2
    {% endfor %}


backend RANCHER_HTTPS
    balance leastconn
    option tcp-check
    tcp-check connect

    {% for host in groups['k8s_workers'] %}
    server {{host}} {{hostvars[host]['ansible_host']}}:443 weight 1 maxconn 500 check inter 2000 rise 2 fall 2
    {% endfor %}
